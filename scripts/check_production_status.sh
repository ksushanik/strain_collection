#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/check_production_status.sh

set -e

REMOTE_HOST="4feb"
REMOTE_DIR="~/strain_ultra_minimal"
PROD_URL="https://culturedb.elcity.ru"

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞..."
echo "üìÖ –î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
echo "üåê –°–µ—Ä–≤–µ—Ä: $REMOTE_HOST"
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $REMOTE_DIR"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
run_remote() {
    local cmd="$1"
    echo "üîß –í—ã–ø–æ–ª–Ω—è—é: $cmd"
    ssh $REMOTE_HOST "cd $REMOTE_DIR && $cmd"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -o ConnectTimeout=5 $REMOTE_HOST "echo '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'"; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $REMOTE_HOST"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
run_remote "docker compose ps --format 'table {{.Name}}\t{{.Status}}\t{{.Ports}}'"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
run_remote "docker stats --no-stream --format 'table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}'"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo ""
echo "üíø –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
ssh $REMOTE_HOST "df -h | grep -E '(Filesystem|/$)'"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫
echo ""
echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å):"
echo "--- Backend ---"
if run_remote "docker compose logs --tail=20 backend | grep -i error || echo '–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'"; then :; fi
echo "--- Frontend ---"  
if run_remote "docker compose logs --tail=20 frontend | grep -i error || echo '–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'"; then :; fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
if curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/health/" | grep -q "200"; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: $PROD_URL/api/health/"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $PROD_URL/api/health/"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å frontend
echo ""
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend..."
if curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/" | grep -q "200"; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω: $PROD_URL/"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $PROD_URL/"
fi

echo ""
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê –°–∏—Å—Ç–µ–º–∞: $PROD_URL" 