#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ Django –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/migrate_production.sh [action]
# –î–µ–π—Å—Ç–≤–∏—è:
#   check     - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
#   apply     - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
#   show      - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å —Å—Ç–∞—Ç—É—Å–æ–º
#   rollback  - –æ—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)

set -e

REMOTE_HOST="4feb"
REMOTE_DIR="~/strain_ultra_minimal"
ACTION=${1:-check}

echo "üóÑÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ Django –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."
echo "üìÖ –î–∞—Ç–∞: $(date '+%Y-%m-%d %H:%M:%S')"
echo "üåê –°–µ—Ä–≤–µ—Ä: $REMOTE_HOST"
echo "üéØ –î–µ–π—Å—Ç–≤–∏–µ: $ACTION"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
run_remote() {
    local cmd="$1"
    echo "üîß –í—ã–ø–æ–ª–Ω—è—é: $cmd"
    ssh $REMOTE_HOST "cd $REMOTE_DIR && $cmd"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -o ConnectTimeout=5 $REMOTE_HOST "echo 'OK'" >/dev/null 2>&1; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $REMOTE_HOST"
    exit 1
fi

echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if ! run_remote "docker compose ps backend | grep -q 'healthy\|running'"; then
    echo "‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤"
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: make deploy-prod –∏–ª–∏ ssh $REMOTE_HOST 'cd $REMOTE_DIR && docker compose up -d'"
    exit 1
fi

case $ACTION in
    "check")
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
        if run_remote "docker compose exec backend python manage.py showmigrations | grep '\[ \]'" 2>/dev/null; then
            echo ""
            echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏!"
            echo "üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make migrate-prod –∏–ª–∏ ./scripts/migrate_production.sh apply"
        else
            echo "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
        fi
        ;;
        
    "show")
        echo "üìã –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–º:"
        run_remote "docker compose exec backend python manage.py showmigrations"
        ;;
        
    "apply")
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π..."
        if run_remote "docker compose exec backend python manage.py showmigrations | grep '\[ \]'" 2>/dev/null; then
            echo ""
            echo "üì• –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            run_remote "docker compose exec db pg_dump -U \$POSTGRES_USER \$POSTGRES_DB > backup_before_migrate_\$(date +%Y%m%d_%H%M%S).sql"
            
            echo "üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
            run_remote "docker compose exec backend python manage.py migrate"
            
            echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
            echo "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:"
            run_remote "docker compose exec backend python manage.py showmigrations | tail -10"
        else
            echo "‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"
        fi
        ;;
        
    "rollback")
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–∞–Ω–Ω—ã—Ö!"
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:"
        run_remote "docker compose exec backend python manage.py showmigrations | grep '\[X\]' | tail -5"
        echo ""
        echo "‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        echo "üí° –î–ª—è –æ—Ç–∫–∞—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://docs.djangoproject.com/en/stable/topics/migrations/#reversing-migrations"
        ;;
        
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: $ACTION"
        echo ""
        echo "üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
        echo "  check     - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  apply     - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ–ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏"
        echo "  show      - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å —Å—Ç–∞—Ç—É—Å–æ–º"
        echo "  rollback  - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–∫–∞—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–π"
        echo ""
        echo "üìã –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
        echo "  ./scripts/migrate_production.sh check"
        echo "  ./scripts/migrate_production.sh apply"
        echo "  make migrate-prod"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê –°–∏—Å—Ç–µ–º–∞: https://culturedb.elcity.ru" 