#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8000"
SAMPLE_ID = 3  # ID –æ–±—Ä–∞–∑—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

def check_sample_characteristics():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–∑—Ü–∞ —á–µ—Ä–µ–∑ API"""
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–∑—Ü–∞ {SAMPLE_ID}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—Ü–∞
    url = f"{BASE_URL}/api/samples/{SAMPLE_ID}/"
    
    try:
        response = requests.get(url)
        
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            sample_data = response.json()
            print(f"üì• –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—Ü–∞: {json.dumps(sample_data, ensure_ascii=False, indent=2)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ
            if 'characteristics' in sample_data:
                print("‚úÖ –ü–æ–ª–µ 'characteristics' –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç–µ!")
                print(f"üîç –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {json.dumps(sample_data['characteristics'], ensure_ascii=False, indent=2)}")
            else:
                print("‚ùå –ü–æ–ª–µ 'characteristics' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç–µ")
                print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:", list(sample_data.keys()))
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑—Ü–∞")
            print(f"üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_characteristics_list():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"""
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")
    
    url = f"{BASE_URL}/api/samples/characteristics/"
    
    try:
        response = requests.get(url)
        
        print(f"üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            characteristics = response.json()
            print(f"üì• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {len(characteristics)}")
            
            # –ò—â–µ–º –Ω–∞—à—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É
            for char in characteristics:
                if char['name'] == '–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–¥–µ—Ä–æ—Ñ–æ—Ä—ã':
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {json.dumps(char, ensure_ascii=False, indent=2)}")
                    break
            else:
                print("‚ùå –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ '–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–¥–µ—Ä–æ—Ñ–æ—Ä—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")
            print(f"üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_sample_characteristics()
    check_characteristics_list()