# =============================================================================
# –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —à—Ç–∞–º–º–æ–≤ –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤ - –û—á–∏—â–µ–Ω–Ω—ã–π Makefile
# =============================================================================

.PHONY: help

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[0;33m
BLUE := \033[0;34m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)=============================================================================$(NC)"
	@echo "$(BLUE)    –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —à—Ç–∞–º–º–æ–≤ –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤ - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo "$(BLUE)=============================================================================$(NC)"
	@echo ""
	@echo "$(GREEN)üöÄ –†–ê–ó–†–ê–ë–û–¢–ö–ê (–ª–æ–∫–∞–ª—å–Ω–æ):$(NC)"
	@echo "  $(YELLOW)dev-setup$(NC)      - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ –ë–î –≤ Docker)"
	@echo "  $(YELLOW)dev-start$(NC)      - –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  $(YELLOW)dev-backend$(NC)    - –ó–∞–ø—É—Å–∫ Django backend –ª–æ–∫–∞–ª—å–Ω–æ (–æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª)"
	@echo "  $(YELLOW)dev-frontend$(NC)   - –ó–∞–ø—É—Å–∫ React frontend –ª–æ–∫–∞–ª—å–Ω–æ (–æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª)"
	@echo "  $(YELLOW)dev-stop$(NC)       - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  $(YELLOW)dev-status$(NC)     - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@echo "$(GREEN)üê≥ –ü–†–û–î–ê–ö–®–ù (Docker):$(NC)"
	@echo "  $(YELLOW)quick-deploy$(NC)   - –ü–æ–ª–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
	@echo "  $(YELLOW)docker-up$(NC)      - –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  $(YELLOW)docker-down$(NC)    - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  $(YELLOW)docker-build$(NC)   - –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤"
	@echo "  $(YELLOW)docker-status$(NC)  - –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  $(YELLOW)docker-logs$(NC)    - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo ""
	@echo "$(GREEN)üé® –§–†–û–ù–¢–ï–ù–î:$(NC)"
	@echo "  $(YELLOW)frontend-build$(NC)  - –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo "  $(YELLOW)frontend-deploy$(NC) - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Docker"
	@echo "  $(YELLOW)frontend-check$(NC)  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
	@echo ""
	@echo "$(GREEN)üíæ BACKUP –ò –î–ê–ù–ù–´–ï:$(NC)"
	@echo "  $(YELLOW)backup-create$(NC)   - –°–æ–∑–¥–∞—Ç—å backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
	@echo "  $(YELLOW)backup-list$(NC)     - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö backup'–æ–≤"
	@echo "  $(YELLOW)import-data$(NC)     - –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–æ–≤"
	@echo ""
	@echo "$(GREEN)üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:$(NC)"
	@echo "  $(YELLOW)test-api$(NC)        - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"
	@echo "  $(YELLOW)test-search$(NC)     - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞"
	@echo ""
	@echo "$(GREEN)üöÄ CI/CD –°–ò–°–¢–ï–ú–ê:$(NC)"
	@echo "  $(YELLOW)smart-deploy$(NC)     - –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π (–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π)"
	@echo "  $(YELLOW)smart-deploy-dry$(NC) - –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
	@echo "  $(YELLOW)deploy-status$(NC)    - –°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  $(YELLOW)deploy-health$(NC)    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
	@echo "  $(YELLOW)init-cicd$(NC)        - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CI/CD —Å–∏—Å—Ç–µ–º—ã"
	@echo ""

# =============================================================================
# –†–ê–ó–†–ê–ë–û–¢–ö–ê (–ª–æ–∫–∞–ª—å–Ω–æ)
# =============================================================================

dev-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ –ë–î –≤ Docker)
	@echo "$(GREEN)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@cp env_dev_example .env.dev || echo "–§–∞–π–ª .env.dev —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
	@echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã –¥–ª—è backend..."
	@cd backend && python3 -m venv strain_venv
	@echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend..."
	@cd backend && . strain_venv/bin/activate && pip install -r requirements.txt
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
	@cd frontend && npm install
	@echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL –≤ Docker..."
	@docker-compose -f docker-compose.dev.yml up -d
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@sleep 10
	@echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	@cd backend && . strain_venv/bin/activate && python manage.py migrate
	@echo "üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö..."
	@cd backend && . strain_venv/bin/activate && python scripts/import_data.py || echo "‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —É–∂–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"
	@echo "$(GREEN)‚úÖ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!$(NC)"

dev-start: ## –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (backend + frontend)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL..."
	@docker-compose -f docker-compose.dev.yml up -d
	@echo ""
	@echo "$(BLUE)üîß Backend –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000$(NC)"
	@echo "$(BLUE)üé® Frontend –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:3000$(NC)"
	@echo ""
	@echo "$(YELLOW)‚ö†Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö:$(NC)"
	@echo "  $(GREEN)make dev-backend$(NC)   # –î–ª—è Django backend"
	@echo "  $(GREEN)make dev-frontend$(NC)  # –î–ª—è React frontend"

dev-backend: ## –ó–∞–ø—É—Å–∫ Django backend –ª–æ–∫–∞–ª—å–Ω–æ (–ø–æ—Ä—Ç 8000)
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ Django backend –Ω–∞ –ø–æ—Ä—Ç—É 8000...$(NC)"
	cd backend && . strain_venv/bin/activate && python manage.py runserver 0.0.0.0:8000

dev-frontend: ## –ó–∞–ø—É—Å–∫ React frontend –ª–æ–∫–∞–ª—å–Ω–æ (–ø–æ—Ä—Ç 3000)
	@echo "$(GREEN)üé® –ó–∞–ø—É—Å–∫ React frontend –Ω–∞ –ø–æ—Ä—Ç—É 3000...$(NC)"
	cd frontend && npm run dev

dev-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(RED)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@docker-compose -f docker-compose.dev.yml down
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"
	@echo "$(YELLOW)üí° Backend –∏ frontend –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é (Ctrl+C)$(NC)"

dev-status: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:$(NC)"
	@echo ""
	@echo "$(GREEN)üêò PostgreSQL (Docker):$(NC)"
	@docker-compose -f docker-compose.dev.yml ps
	@echo ""
	@echo "$(GREEN)üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:$(NC)"
	@echo -n "  Backend (8000): "
	@curl -s -o /dev/null -w "HTTP %{http_code}" http://localhost:8000/api/health/ || echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo ""
	@echo -n "  Frontend (3000): "
	@curl -s -o /dev/null -w "HTTP %{http_code}" http://localhost:3000 || echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@echo ""

# =============================================================================
# –ü–†–û–î–ê–ö–®–ù (Docker)
# =============================================================================

quick-deploy: ## –ü–æ–ª–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...$(NC)"
	@chmod +x scripts/init_deploy.sh
	@./scripts/init_deploy.sh

docker-up: ## –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BLUE)üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose up -d
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

docker-down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose down
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

docker-build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
	@echo "$(BLUE)üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose build --no-cache
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã$(NC)"

docker-status: ## –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	@docker-compose ps

# =============================================================================
# –§–†–û–ù–¢–ï–ù–î
# =============================================================================

frontend-build: ## –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "$(BLUE)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...$(NC)"
	@echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Å–±–æ—Ä–∫–∏..."
	cd frontend && rm -rf dist
	@echo "üî® –°–±–æ—Ä–∫–∞ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏..."
	cd frontend && npm run build
	@echo "$(GREEN)‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω$(NC)"

frontend-deploy: frontend-build ## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Docker
	@echo "$(BLUE)üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Docker...$(NC)"
	@echo "üê≥ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ nginx –æ–±—Ä–∞–∑–∞..."
	docker-compose build nginx
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	docker-compose restart nginx
	@echo "$(GREEN)‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Docker!$(NC)"

# =============================================================================
# BACKUP –ò –î–ê–ù–ù–´–ï
# =============================================================================

backup-create: ## –°–æ–∑–¥–∞—Ç—å backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup...$(NC)"
	cd backend && . strain_venv/bin/activate && python scripts/backup_database.py create --type full
	@echo "$(GREEN)‚úÖ Backup —Å–æ–∑–¥–∞–Ω$(NC)"

import-data: ## –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–æ–≤
	@echo "$(GREEN)üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV...$(NC)"
	cd backend && . strain_venv/bin/activate && python scripts/import_data.py

# =============================================================================
# –£–¢–ò–õ–ò–¢–´
# =============================================================================

status: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@echo "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
	@docker-compose ps 2>/dev/null || echo "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
	@echo "\n–î–µ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
	@docker-compose -f docker-compose.dev.yml ps 2>/dev/null || echo "–î–µ–≤ —Å—Ä–µ–¥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
	@echo "$(BLUE)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:$(NC)"
	@echo ""
	@echo "$(GREEN)üéØ –†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´:$(NC)"
	@echo "  ‚Ä¢ $(YELLOW)–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞$(NC): PostgreSQL –≤ Docker, Django+React –ª–æ–∫–∞–ª—å–Ω–æ"
	@echo "  ‚Ä¢ $(YELLOW)–ü—Ä–æ–¥–∞–∫—à–Ω$(NC): –í—Å–µ –≤ Docker (PostgreSQL + Django + React + Nginx)"
	@echo ""
	@echo "$(GREEN)üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –†–ê–ó–†–ê–ë–û–¢–ö–ò:$(NC)"
	@echo "  1. make -f Makefile.clean dev-setup     # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ (–æ–¥–∏–Ω —Ä–∞–∑)"
	@echo "  2. make -f Makefile.clean dev-start     # –ó–∞–ø—É—Å–∫ PostgreSQL"
	@echo "  3. make -f Makefile.clean dev-backend   # Django –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
	@echo "  4. make -f Makefile.clean dev-frontend  # React –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
	@echo ""
	@echo "$(GREEN)üê≥ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –ü–†–û–î–ê–ö–®–ù:$(NC)"
	@echo "  1. make -f Makefile.clean quick-deploy  # –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
	@echo ""
	@echo "$(GREEN)üåê URL –ê–î–†–ï–°–ê:$(NC)"
	@echo "  ‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: http://localhost:3000 (frontend) + http://localhost:8000 (backend)"
	@echo "  ‚Ä¢ –ü—Ä–æ–¥–∞–∫—à–Ω: http://localhost (–≤—Å–µ –≤ –æ–¥–Ω–æ–º)"
	@echo "  ‚Ä¢ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:8000/admin/ –∏–ª–∏ http://localhost/admin/"

# =============================================================================
# CI/CD –°–ò–°–¢–ï–ú–ê
# =============================================================================

smart-deploy: ## –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@./scripts/smart_deploy.sh

smart-deploy-force: ## –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
	@echo "$(GREEN)üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@./scripts/smart_deploy.sh --force

smart-deploy-dry: ## –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (dry run)
	@echo "$(GREEN)üîç –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (dry run)...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@./scripts/smart_deploy.sh --dry-run

deploy-backend: ## –î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ backend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
	@echo "$(GREEN)üì¶ –î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ backend...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@./scripts/smart_deploy.sh --backend-only

deploy-frontend: ## –î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ frontend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
	@echo "$(GREEN)üé® –î–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ frontend...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@./scripts/smart_deploy.sh --frontend-only

deploy-status: ## –°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@bash -c "source deploy.config && ssh \$$REMOTE_HOST 'cd \$$REMOTE_DIR && docker compose ps'"

deploy-logs: ## –õ–æ–≥–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	@bash -c "source deploy.config && ssh \$$REMOTE_HOST 'cd \$$REMOTE_DIR && docker compose logs --tail=50'"

deploy-health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...$(NC)"
	@bash -c "source deploy.config && curl -sf \$$REMOTE_URL/api/health/ && echo '‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç' || echo '‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'"
	@bash -c "source deploy.config && curl -sf \$$REMOTE_URL && echo '‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç' || echo '‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'"

watch-deploy: ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Ñ–∞–π–ª–æ–≤
	@echo "$(GREEN)üëÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö...$(NC)"
	@chmod +x scripts/watch_and_deploy.sh
	@./scripts/watch_and_deploy.sh

watch-frontend: ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Ç–æ–ª—å–∫–æ frontend
	@echo "$(GREEN)üëÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π frontend...$(NC)"
	@chmod +x scripts/watch_and_deploy.sh
	@./scripts/watch_and_deploy.sh --frontend-only

watch-backend: ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Ç–æ–ª—å–∫–æ backend
	@echo "$(GREEN)üëÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π backend...$(NC)"
	@chmod +x scripts/watch_and_deploy.sh
	@./scripts/watch_and_deploy.sh --backend-only

setup-github-repo: ## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
	@echo "$(BLUE)üêô –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è CI/CD...$(NC)"
	@echo ""
	@echo "$(GREEN)1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub$(NC)"
	@echo ""
	@echo "$(GREEN)2. –î–æ–±–∞–≤—å—Ç–µ remote –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥:$(NC)"
	@echo "   git remote add origin https://github.com/YOUR_USERNAME/strain-collection.git"
	@echo "   git branch -M main"
	@echo "   git push -u origin main"
	@echo ""
	@echo "$(GREEN)3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets:$(NC)"
	@echo "   - DOCKER_HUB_USERNAME: gimmyhat"
	@echo "   - DOCKER_HUB_TOKEN: <–≤–∞—à —Ç–æ–∫–µ–Ω Docker Hub>"
	@echo "   - SSH_PRIVATE_KEY: <–≤–∞—à SSH –∫–ª—é—á>"
	@echo "   - SSH_USER: <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è SSH>"
	@echo "   - REMOTE_HOST: <IP —Å–µ—Ä–≤–µ—Ä–∞>"
	@echo "   - REMOTE_DIR: <–ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ>"
	@echo "   - REMOTE_URL: <URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è>"
	@echo "   - SLACK_WEBHOOK_URL: <–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π>"
	@echo ""
	@echo "$(GREEN)4. –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∂–¥—ã–π push –≤ main –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ø–ª–æ–∏—Ç—å—Å—è!$(NC)"

init-cicd: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π CI/CD —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CI/CD —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@chmod +x scripts/smart_deploy.sh
	@git add .github/workflows/ci-cd.yml 2>/dev/null || echo "GitHub workflow —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω"
	@git add scripts/smart_deploy.sh 
	@git add frontend/src/config/api.ts
	@git add Makefile.clean
	@git commit -m "üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø CI/CD: GitHub Actions + Smart Deploy + API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è" || echo "–ò–∑–º–µ–Ω–µ–Ω–∏—è —É–∂–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã"
	@echo ""
	@echo "$(GREEN)‚úÖ CI/CD —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞!$(NC)"
	@echo ""
	@echo "$(YELLOW)üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:$(NC)"
	@echo "   1. $(GREEN)make setup-github-repo$(NC)  # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ GitHub"
	@echo "   2. –°–æ–∑–¥–∞–π—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
	@echo "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets"
	@echo "   4. Push –≤ main –≤–µ—Ç–∫—É ‚Üí –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π!"
	@echo ""
	@echo "$(YELLOW)üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã CI/CD:$(NC)"
	@echo "   ‚Ä¢ $(GREEN)make smart-deploy$(NC)      # –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π"
	@echo "   ‚Ä¢ $(GREEN)make smart-deploy-dry$(NC)  # –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
	@echo "   ‚Ä¢ $(GREEN)make deploy-status$(NC)     # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "   ‚Ä¢ $(GREEN)make deploy-health$(NC)     # Health check"

# üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
test-api:	## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
	@curl -s -f http://localhost:8000/api/health/ > /dev/null && echo "‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
	@curl -s -f http://localhost:8000/api/strains/?limit=1 > /dev/null && echo "‚úÖ Strains API —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Strains API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" 
	@curl -s -f http://localhost:8000/api/samples/?limit=1 > /dev/null && echo "‚úÖ Samples API —Ä–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå Samples API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

validate-cicd:	## –í–∞–ª–∏–¥–∞—Ü–∏—è CI/CD –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	@echo "üîç –í–∞–ª–∏–¥–∞—Ü–∏—è CI/CD —Å–∏—Å—Ç–µ–º—ã..."
	@test -f .github/workflows/ci-cd.yml && echo "‚úÖ GitHub Actions workflow –Ω–∞–π–¥–µ–Ω" || echo "‚ùå GitHub Actions workflow –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
	@test -f scripts/smart_deploy.sh && echo "‚úÖ Smart deploy —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω" || echo "‚ùå Smart deploy —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
	@test -f scripts/watch_and_deploy.sh && echo "‚úÖ Watch deploy —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω" || echo "‚ùå Watch deploy —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
	@bash -n scripts/smart_deploy.sh && echo "‚úÖ Smart deploy —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" || echo "‚ùå Smart deploy —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
	@bash -n scripts/watch_and_deploy.sh && echo "‚úÖ Watch deploy —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" || echo "‚ùå Watch deploy —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
	@python3 -c "import yaml; yaml.safe_load(open('.github/workflows/ci-cd.yml'))" && echo "‚úÖ GitHub Actions YAML –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" || echo "‚ùå GitHub Actions YAML –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
