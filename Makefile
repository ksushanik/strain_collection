# ================================================================
# Strain-Collection ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Makefile
# ================================================================
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
#   make up            ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –í–°–ï —Å–µ—Ä–≤–∏—Å—ã (–ë–î + backend + frontend)
#   make down          ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –í–°–ï —Å–µ—Ä–≤–∏—Å—ã
#   make db-up|db-down ‚Äî —Å—Ç–∞—Ä—Ç / —Å—Ç–æ–ø PostgreSQL
#   make backend-up|backend-down   ‚Äî —Å—Ç–∞—Ä—Ç / —Å—Ç–æ–ø Django backend
#   make frontend-up|frontend-down ‚Äî —Å—Ç–∞—Ä—Ç / —Å—Ç–æ–ø React frontend
#   make deploy        ‚Äî –¥–µ–ø–ª–æ–π (Docker build + up) –ª–æ–∫–∞–ª—å–Ω–æ
#   make deploy-prod   ‚Äî –ø–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω (—Å–±–æ—Ä–∫–∞ + –æ—Ç–ø—Ä–∞–≤–∫–∞ + –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
#   make build-images  ‚Äî —Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
#   make push-images   ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –≤ Docker Hub
#   make update-remote ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
# ================================================================

.PHONY: help up down db-up db-down backend-up backend-down frontend-up frontend-down deploy deploy-prod build-images push-images update-remote status-prod logs-prod migrate-prod

# -------- PostgreSQL ---------------------------------------------------------

db-up:
	@echo "üêò  –ó–∞–ø—É—Å–∫ PostgreSQL ..."
	docker compose -f docker-compose.dev.yml up -d postgres
	docker compose -f docker-compose.dev.yml ps

db-down:
	@echo "üõë  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL ..."
	docker compose -f docker-compose.dev.yml stop postgres || true

# -------- Django backend -----------------------------------------------------

backend-up:
	@echo "üîß  –ó–∞–ø—É—Å–∫ Django backend ..."
	cd backend && \
	if [ ! -d strain_venv ]; then \
	  python3 -m venv strain_venv && . strain_venv/bin/activate && pip install -r requirements.txt; \
	fi && \
	. strain_venv/bin/activate && \
	POSTGRES_HOST=localhost POSTGRES_PORT=5433 POSTGRES_DB=strain_collection DJANGO_DEBUG=True \
	python manage.py runserver 0.0.0.0:8000 & echo $$! > ../backend.pid
	@echo "üîë  PID backend —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ backend.pid"

backend-down:
	@echo "üõë  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Django backend ..."
	-@kill `cat backend.pid 2>/dev/null` 2>/dev/null || pkill -f "manage.py runserver" || true
	@rm -f backend.pid

# -------- React frontend -----------------------------------------------------

frontend-up:
	@echo "üé®  –ó–∞–ø—É—Å–∫ React frontend ..."
	cd frontend && npm install --silent && (npm run dev --silent &) && echo $$! > ../frontend.pid
	@echo "üîë  PID frontend —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ frontend.pid"

frontend-down:
	@echo "üõë  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ React frontend ..."
	-@kill `cat frontend.pid 2>/dev/null` 2>/dev/null || pkill -f vite || true
	@rm -f frontend.pid

# -------- Orchestrators ------------------------------------------------------

up: db-up backend-up frontend-up
	@echo "üöÄ  –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–Ω—è—Ç–∞:"
	@echo "  Backend  ‚Üí http://localhost:8000/api/health/"
	@echo "  Frontend ‚Üí http://localhost:3000"

down: frontend-down backend-down db-down
	@echo "‚úÖ  –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# -------- Production build & deployment --------------------------------------

build-frontend:
	@echo "üéØ  –°–±–æ—Ä–∫–∞ React frontend..."
	cd frontend && npm run build

build-images: build-frontend
	@echo "üì¶  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker build --no-cache -t gimmyhat/strain-collection-backend:latest backend/
	docker build --no-cache -t gimmyhat/strain-collection-frontend:latest frontend/
	@echo "‚úÖ  –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

push-images:
	@echo "üö¢  –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –≤ Docker Hub..."
	@./scripts/update_docker_hub.sh

update-remote:
	@echo "üåê  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞..."
	@./scripts/update_remote_server.sh

status-prod:
	@echo "üîç  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞..."
	@./scripts/check_production_status.sh

logs-prod:
	@echo "üìù  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞..."
	@./scripts/logs_production.sh $(filter-out logs-prod,$(MAKECMDGOALS))

migrate-prod:
	@echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."
	@./scripts/migrate_production.sh apply

deploy-prod: build-images push-images update-remote
	@echo "üéâ  –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –∑–∞–≤–µ—Ä—à–µ–Ω!"
	@echo "üåê  –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: https://culturedb.elcity.ru"

# -------- Local production deploy --------------------------------------------

deploy:
	@echo "üì¶  –î–µ–ø–ª–æ–π (Docker build ‚Üí up) ..."
	docker compose down --remove-orphans || true
	docker compose build --no-cache
	docker compose up -d
	@docker compose ps
	@echo "üåê  –ü—Ä–æ–¥–∞–∫—à–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –≤–∞—à–µ–º—É –¥–æ–º–µ–Ω—É / http://localhost"

help:
	@echo "\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:";
	@echo "  make up             ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –í–°–ï —Å–µ—Ä–≤–∏—Å—ã (–ë–î + backend + frontend)";
	@echo "  make down           ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –í–°–ï —Å–µ—Ä–≤–∏—Å—ã";
	@echo "  make db-up          ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ PostgreSQL";
	@echo "  make db-down        ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PostgreSQL";
	@echo "  make backend-up     ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å Django-backend";
	@echo "  make backend-down   ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Django-backend";
	@echo "  make frontend-up    ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å React-frontend";
	@echo "  make frontend-down  ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å React-frontend";
	@echo "  make deploy         ‚Äî –¥–µ–ø–ª–æ–π Docker-–ø—Ä–æ–¥–∞–∫—à–Ω (–ª–æ–∫–∞–ª—å–Ω–æ)";
	@echo "  make deploy-prod    ‚Äî –ü–û–õ–ù–´–ô –¥–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä (—Å–±–æ—Ä–∫–∞ + –æ—Ç–ø—Ä–∞–≤–∫–∞ + –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)";
	@echo "  make build-images   ‚Äî —Å–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã";
	@echo "  make push-images    ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–∑—ã –≤ Docker Hub";
	@echo "  make update-remote  ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä";
	@echo "  make status-prod    ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞";
	@echo "  make logs-prod      ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞ (make logs-prod backend 50)";
	@echo "  make migrate-prod   ‚Äî –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ";

# –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è logs-prod
%:
	@: