#!/usr/bin/env python
import os
import sys
import django
import pandas as pd

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'strain_tracker_project.settings')
django.setup()

from sample_management.models import Sample

def analyze_encoding():
    print("üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤")
    print("=" * 50)
    
    # –ß–∏—Ç–∞–µ–º –∏–∑ CSV
    csv_path = "../data/Samples_Table.csv"
    df = pd.read_csv(csv_path)
    sample_55_row = df[df['SampleRowID'] == 55].iloc[0]
    csv_value = sample_55_row['OriginalSampleNumber']
    
    # –ß–∏—Ç–∞–µ–º –∏–∑ –ë–î
    sample = Sample.objects.get(id=55)
    db_value = sample.original_sample_number
    
    print(f"üìÑ –ó–Ω–∞—á–µ–Ω–∏–µ –∏–∑ CSV: '{csv_value}'")
    print(f"   –î–ª–∏–Ω–∞: {len(csv_value)}")
    print(f"   –ë–∞–π—Ç—ã: {csv_value.encode('utf-8')}")
    print(f"   Unicode –∫–æ–¥—ã: {[ord(c) for c in csv_value]}")
    print()
    
    print(f"üóÑÔ∏è –ó–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ë–î: '{db_value}'")
    print(f"   –î–ª–∏–Ω–∞: {len(db_value)}")
    print(f"   –ë–∞–π—Ç—ã: {db_value.encode('utf-8')}")
    print(f"   Unicode –∫–æ–¥—ã: {[ord(c) for c in db_value]}")
    print()
    
    print(f"üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
    print(f"   –†–∞–≤–Ω—ã: {csv_value == db_value}")
    print(f"   –†–∞–≤–Ω—ã (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ): {csv_value.strip() == db_value.strip()}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª
    print(f"\nüìù –ü–æ—Å–∏–º–≤–æ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:")
    for i, (c1, c2) in enumerate(zip(csv_value, db_value)):
        print(f"   –ü–æ–∑–∏—Ü–∏—è {i}: CSV='{c1}' (U+{ord(c1):04X}) vs –ë–î='{c2}' (U+{ord(c2):04X}) - {'‚úÖ' if c1 == c2 else '‚ùå'}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤ –ë–î –∑–∞–ø–∏—Å–∏ —Å –ª–∞—Ç–∏–Ω—Å–∫–æ–π A
    latin_a_samples = Sample.objects.filter(original_sample_number='11A').count()
    cyrillic_a_samples = Sample.objects.filter(original_sample_number='11–ê').count()
    
    print(f"\nüîç –ü–æ–∏—Å–∫ –≤ –ë–î:")
    print(f"   –û–±—Ä–∞–∑—Ü—ã —Å '11A' (–ª–∞—Ç–∏–Ω—Å–∫–∞—è A): {latin_a_samples}")
    print(f"   –û–±—Ä–∞–∑—Ü—ã —Å '11–ê' (–∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∞—è –ê): {cyrillic_a_samples}")

if __name__ == "__main__":
    analyze_encoding()