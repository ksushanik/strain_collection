#!/usr/bin/env python
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'strain_tracker_project.settings')
django.setup()

from sample_management.models import Sample
from storage_management.models import Storage

def check_sample_56():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑—Ü–∞ 56")
    print("=" * 50)
    
    try:
        sample = Sample.objects.get(id=56)
        print(f"‚úÖ –û–±—Ä–∞–∑–µ—Ü –Ω–∞–π–¥–µ–Ω: ID {sample.id}")
        print(f"üìù –ù–æ–º–µ—Ä –æ–±—Ä–∞–∑—Ü–∞: {sample.original_sample_number}")
        print(f"üß¨ –®—Ç–∞–º–º: {sample.strain}")
        
        if sample.storage:
            storage = sample.storage
            print(f"\nüì¶ –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:")
            print(f"   ID —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {storage.id}")
            print(f"   –ë–æ–∫—Å: {storage.box_id}")
            print(f"   –Ø—á–µ–π–∫–∞: {storage.cell_id}")
            print(f"   –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {storage}")
        else:
            print("\n‚ùå –£ –æ–±—Ä–∞–∑—Ü–∞ –ù–ï–¢ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞!")
            
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –ø–æ–ª—è –æ–±—Ä–∞–∑—Ü–∞
        print(f"\nüìã –í—Å–µ –ø–æ–ª—è –æ–±—Ä–∞–∑—Ü–∞:")
        for field in sample._meta.fields:
            field_name = field.name
            field_value = getattr(sample, field_name)
            if field_value is not None:
                print(f"   {field_name}: {field_value}")
        
    except Sample.DoesNotExist:
        print("‚ùå –û–±—Ä–∞–∑–µ—Ü —Å ID 56 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â:")
    total_storages = Storage.objects.count()
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–π—Ç–∏ –∑–∞–Ω—è—Ç—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    occupied_storage_ids = Sample.objects.filter(storage__isnull=False).values_list('storage_id', flat=True)
    occupied_storages = len(set(occupied_storage_ids))
    free_storages = total_storages - occupied_storages
    
    print(f"   –í—Å–µ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â: {total_storages}")
    print(f"   –ó–∞–Ω—è—Ç—ã—Ö: {occupied_storages}")
    print(f"   –°–≤–æ–±–æ–¥–Ω—ã—Ö: {free_storages}")
    
    # –ü–æ–∫–∞–∂–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â
    print(f"\nüÜì –ü—Ä–∏–º–µ—Ä—ã —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â:")
    free_storage_examples = Storage.objects.exclude(id__in=occupied_storage_ids)[:5]
    for storage in free_storage_examples:
        print(f"   ID {storage.id}: –ë–æ–∫—Å {storage.box_id}, –Ø—á–µ–π–∫–∞ {storage.cell_id}")

def check_storage_api_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É API –¥–ª—è —Ö—Ä–∞–Ω–∏–ª–∏—â"""
    print(f"\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Storage –º–æ–¥–µ–ª–∏:")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    storage = Storage.objects.first()
    if storage:
        print(f"–ü—Ä–∏–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {storage}")
        print(f"–ü–æ–ª—è –º–æ–¥–µ–ª–∏ Storage:")
        for field in storage._meta.fields:
            field_name = field.name
            field_value = getattr(storage, field_name)
            field_type = field.__class__.__name__
            print(f"   {field_name} ({field_type}): {field_value}")

if __name__ == "__main__":
    check_sample_56()
    check_storage_api_structure()