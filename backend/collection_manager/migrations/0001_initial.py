# Generated by Django 4.2.7 on 2025-06-19 10:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AppendixNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст примечания")),
            ],
            options={
                "verbose_name": "Примечание",
                "verbose_name_plural": "Примечания",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст комментария")),
            ],
            options={
                "verbose_name": "Комментарий",
                "verbose_name_plural": "Комментарии",
            },
        ),
        migrations.CreateModel(
            name="IndexLetter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "letter_value",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Индексная буква"
                    ),
                ),
            ],
            options={
                "verbose_name": "Индексная буква",
                "verbose_name_plural": "Индексные буквы",
                "ordering": ["letter_value"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        unique=True,
                        verbose_name="Название местоположения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Местоположение",
                "verbose_name_plural": "Местоположения",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "organism_name",
                    models.CharField(max_length=300, verbose_name="Название организма"),
                ),
                (
                    "source_type",
                    models.CharField(max_length=100, verbose_name="Тип источника"),
                ),
                (
                    "category",
                    models.CharField(max_length=100, verbose_name="Категория"),
                ),
            ],
            options={
                "verbose_name": "Источник",
                "verbose_name_plural": "Источники",
                "ordering": ["organism_name"],
            },
        ),
        migrations.CreateModel(
            name="Strain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "short_code",
                    models.CharField(
                        max_length=100, verbose_name="Короткий код штамма"
                    ),
                ),
                (
                    "rrna_taxonomy",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="rRNA таксономия",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        max_length=200, verbose_name="Идентификатор штамма"
                    ),
                ),
                (
                    "name_alt",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Альтернативное название",
                    ),
                ),
                (
                    "rcam_collection_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="ID коллекции RCAM",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "Штамм",
                "verbose_name_plural": "Штаммы",
                "ordering": ["short_code"],
            },
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("box_id", models.CharField(max_length=20, verbose_name="ID бокса")),
                (
                    "cell_id",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ячейка должна быть в формате A1-I9",
                                regex="^[A-I][1-9]$",
                            )
                        ],
                        verbose_name="ID ячейки",
                    ),
                ),
            ],
            options={
                "verbose_name": "Хранилище",
                "verbose_name_plural": "Хранилища",
                "ordering": ["box_id", "cell_id"],
                "unique_together": {("box_id", "cell_id")},
            },
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "original_sample_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Оригинальный номер образца",
                    ),
                ),
                (
                    "has_photo",
                    models.BooleanField(default=False, verbose_name="Есть фото"),
                ),
                (
                    "is_identified",
                    models.BooleanField(default=False, verbose_name="Идентифицирован"),
                ),
                (
                    "has_antibiotic_activity",
                    models.BooleanField(
                        default=False, verbose_name="Есть антибиотическая активность"
                    ),
                ),
                (
                    "has_genome",
                    models.BooleanField(default=False, verbose_name="Есть геном"),
                ),
                (
                    "has_biochemistry",
                    models.BooleanField(default=False, verbose_name="Есть биохимия"),
                ),
                (
                    "seq_status",
                    models.BooleanField(
                        default=False, verbose_name="Статус секвенирования"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "appendix_note",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.appendixnote",
                        verbose_name="Примечание",
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.comment",
                        verbose_name="Комментарий",
                    ),
                ),
                (
                    "index_letter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.indexletter",
                        verbose_name="Индексная буква",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.location",
                        verbose_name="Местоположение",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.source",
                        verbose_name="Источник",
                    ),
                ),
                (
                    "storage",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="collection_manager.storage",
                        verbose_name="Место хранения",
                    ),
                ),
                (
                    "strain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="collection_manager.strain",
                        verbose_name="Штамм",
                    ),
                ),
            ],
            options={
                "verbose_name": "Образец",
                "verbose_name_plural": "Образцы",
                "ordering": ["strain__short_code", "original_sample_number"],
            },
        ),
    ]
