#!/usr/bin/env python
import os
import sys
import django
import csv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'strain_tracker_project.settings')
django.setup()

from sample_management.models import Sample
from scripts.normalize_text import normalize_cyrillic_to_latin

def test_sample_55_final():
    print("üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–∑—Ü–∞ 55")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ë–î
    print("1Ô∏è‚É£ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    try:
        sample_55 = Sample.objects.get(id=55)
        print(f"   ‚úÖ –û–±—Ä–∞–∑–µ—Ü ID 55 –Ω–∞–π–¥–µ–Ω")
        print(f"   üìã original_sample_number: '{sample_55.original_sample_number}'")
        print(f"   üî§ Unicode –∫–æ–¥—ã: {[ord(c) for c in sample_55.original_sample_number]}")
    except Sample.DoesNotExist:
        print("   ‚ùå –û–±—Ä–∞–∑–µ—Ü ID 55 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # 2. –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV
    print("\n2Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV:")
    csv_path = '../data/Samples_Table.csv'
    
    try:
        with open(csv_path, 'r', encoding='utf-8') as file:
            reader = csv.DictReader(file)
            rows = list(reader)
            
            # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É 55 (–∏–Ω–¥–µ–∫—Å 54)
            if len(rows) > 54:
                row_55 = rows[54]
                csv_original_number = row_55.get('OriginalSampleNumber', '')
                print(f"   ‚úÖ –°—Ç—Ä–æ–∫–∞ 55 –Ω–∞–π–¥–µ–Ω–∞ –≤ CSV")
                print(f"   üìã OriginalSampleNumber: '{csv_original_number}'")
                print(f"   üî§ Unicode –∫–æ–¥—ã: {[ord(c) for c in csv_original_number]}")
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
                normalized_number = normalize_cyrillic_to_latin(csv_original_number)
                print(f"   üîÑ –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: '{normalized_number}'")
                print(f"   üî§ Unicode –∫–æ–¥—ã: {[ord(c) for c in normalized_number]}")
            else:
                print("   ‚ùå –°—Ç—Ä–æ–∫–∞ 55 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ CSV")
                return
                
    except FileNotFoundError:
        print(f"   ‚ùå –§–∞–π–ª {csv_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É:")
    
    # –ü–æ–∏—Å–∫ –ø–æ –ª–∞—Ç–∏–Ω—Å–∫–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É
    latin_samples = Sample.objects.filter(original_sample_number='11A')
    print(f"   üîç –ü–æ–∏—Å–∫ –ø–æ '11A': –Ω–∞–π–¥–µ–Ω–æ {latin_samples.count()} –æ–±—Ä–∞–∑—Ü–æ–≤")
    
    # –ü–æ–∏—Å–∫ –ø–æ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É
    cyrillic_samples = Sample.objects.filter(original_sample_number='11–ê')
    print(f"   üîç –ü–æ–∏—Å–∫ –ø–æ '11–ê': –Ω–∞–π–¥–µ–Ω–æ {cyrillic_samples.count()} –æ–±—Ä–∞–∑—Ü–æ–≤")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:")
    db_value = sample_55.original_sample_number
    csv_value = normalized_number
    
    if db_value == csv_value:
        print(f"   ‚úÖ –°–û–í–ü–ê–î–ï–ù–ò–ï: –ë–î '{db_value}' == CSV '{csv_value}'")
        print("   üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å OriginalSampleNumber —Ä–µ—à–µ–Ω–∞!")
    else:
        print(f"   ‚ùå –ù–ï –°–û–í–ü–ê–î–ê–ï–¢: –ë–î '{db_value}' != CSV '{csv_value}'")
        print("   üö® –ü—Ä–æ–±–ª–µ–º–∞ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # 5. –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ (—Å–∏–º—É–ª—è—Ü–∏—è)
    print("\n5Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞:")
    print(f"   üì• CSV –¥–∞–Ω–Ω—ã–µ: OriginalSampleNumber = '{csv_original_number}'")
    print(f"   üîÑ –ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: '{normalized_number}'")
    print(f"   üîç –ü–æ–∏—Å–∫ –≤ –ë–î –ø–æ '{normalized_number}':")
    
    existing_samples = Sample.objects.filter(original_sample_number=normalized_number)
    if existing_samples.exists():
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑–µ—Ü: ID {existing_samples.first().id}")
        print("   üìù –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏")
    else:
        print("   ‚ùå –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   üìù –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å")
    
    print("\n" + "=" * 50)
    if db_value == csv_value and existing_samples.exists():
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å OriginalSampleNumber –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–µ–Ω–∞")
    else:
        print("‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("üö® –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ")

if __name__ == "__main__":
    test_sample_55_final()