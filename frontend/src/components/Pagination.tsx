import React from 'react';
import { ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight } from 'lucide-react';
import type { PaginationInfo } from '../types';

interface PaginationProps {
  pagination: PaginationInfo;
  onPageChange: (page: number) => void;
  showInfo?: boolean;
}

const Pagination: React.FC<PaginationProps> = ({ 
  pagination, 
  onPageChange, 
  showInfo = true 
}) => {
  const { page, total_pages, has_next, has_previous, total, shown, limit } = pagination;

  console.log('üìÑ Pagination component props:', { pagination, currentPage: page });

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getPageNumbers = () => {
    const delta = 2; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π
    const range = [];
    const rangeWithDots = [];

    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    range.push(1);

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–π
    for (let i = Math.max(2, page - delta); i <= Math.min(total_pages - 1, page + delta); i++) {
      range.push(i);
    }

    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø–µ—Ä–≤–∞—è)
    if (total_pages > 1) {
      range.push(total_pages);
    }

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
    const uniqueRange = [...new Set(range)].sort((a, b) => a - b);

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫–∏ –º–µ–∂–¥—É –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    let prev = 0;
    for (const current of uniqueRange) {
      if (current - prev > 1) {
        rangeWithDots.push('...');
      }
      rangeWithDots.push(current);
      prev = current;
    }

    return rangeWithDots;
  };

  const pageNumbers = getPageNumbers();

  return (
    <div className="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö */}
      {showInfo && (
        <div className="text-sm text-gray-600">
          –ü–æ–∫–∞–∑–∞–Ω–æ <span className="font-medium">{shown}</span> –∏–∑{' '}
          <span className="font-medium">{total.toLocaleString()}</span> –∑–∞–ø–∏—Å–µ–π
          {limit && (
            <span className="text-gray-400 ml-2">
              (–ø–æ {limit} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
            </span>
          )}
        </div>
      )}

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º */}
      <div className="flex items-center space-x-1">
        {/* –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
        <button
          onClick={() => onPageChange(1)}
          disabled={!has_previous}
          className={`p-2 rounded-md ${
            has_previous
              ? 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
              : 'text-gray-300 cursor-not-allowed'
          }`}
          title="–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        >
          <ChevronsLeft className="w-4 h-4" />
        </button>

        {/* –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
        <button
          onClick={() => onPageChange(page - 1)}
          disabled={!has_previous}
          className={`p-2 rounded-md ${
            has_previous
              ? 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
              : 'text-gray-300 cursor-not-allowed'
          }`}
          title="–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        >
          <ChevronLeft className="w-4 h-4" />
        </button>

        {/* –ù–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü */}
        <div className="flex items-center space-x-1">
          {pageNumbers.map((pageNum, index) => {
            if (pageNum === '...') {
              return (
                <span
                  key={`dots-${index}`}
                  className="px-3 py-2 text-gray-400"
                >
                  ...
                </span>
              );
            }

            const pageNumber = pageNum as number;
            const isCurrentPage = pageNumber === page;

            return (
              <button
                key={pageNumber}
                onClick={() => {
                  console.log('üñ±Ô∏è Page button clicked:', pageNumber);
                  onPageChange(pageNumber);
                }}
                className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                  isCurrentPage
                    ? 'bg-blue-600 text-white'
                    : 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
                }`}
              >
                {pageNumber}
              </button>
            );
          })}
        </div>

        {/* –°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
        <button
          onClick={() => onPageChange(page + 1)}
          disabled={!has_next}
          className={`p-2 rounded-md ${
            has_next
              ? 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
              : 'text-gray-300 cursor-not-allowed'
          }`}
          title="–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        >
          <ChevronRight className="w-4 h-4" />
        </button>

        {/* –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
        <button
          onClick={() => onPageChange(total_pages)}
          disabled={!has_next}
          className={`p-2 rounded-md ${
            has_next
              ? 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
              : 'text-gray-300 cursor-not-allowed'
          }`}
          title="–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
        >
          <ChevronsRight className="w-4 h-4" />
        </button>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
      <div className="flex items-center space-x-2">
        <span className="text-sm text-gray-600">–ü–µ—Ä–µ–π—Ç–∏ –∫:</span>
        <input
          type="number"
          min={1}
          max={total_pages}
          value={page}
          onChange={(e) => {
            const newPage = parseInt(e.target.value);
            if (newPage >= 1 && newPage <= total_pages) {
              onPageChange(newPage);
            }
          }}
          className="w-16 px-2 py-1 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <span className="text-sm text-gray-600">–∏–∑ {total_pages}</span>
      </div>
    </div>
  );
};

export default Pagination; 